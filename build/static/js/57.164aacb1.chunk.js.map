{"version":3,"sources":["wrappers/breadcrumb/Breadcrumb.js","pages/other/MyOrder.js"],"names":["Breadcrumb","className","separator","item","NavLink","finalItem","connect","state","cartItems","cartData","wishlistItems","wishlistData","currency","currencyData","dispatch","addToCart","addToast","quantityCount","addToWishlist","deleteFromWishlist","deleteAllFromWishlist","location","pathname","useToasts","useState","order","setOrder","fetchOrder","token","a","Axios","get","headers","localStorage","getItem","data","console","log","useEffect","name","content","to","process","headerTop","length","map","orders","key","cus_orderId","src","product","product_img","alt","product_name","color","size","product_qty","gsttotal","status","moment","createdAt","format"],"mappings":"mHAAA,sCAoBeA,IAhBI,WACjB,OACE,yBAAKC,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kCACb,kBAAC,cAAD,CACEC,UAAW,mCACXC,KAAMC,IACNC,UAAW,c,oOC4MRC,6BAzBS,SAACC,GACvB,MAAO,CACLC,UAAWD,EAAME,SACjBC,cAAeH,EAAMI,aACrBC,SAAUL,EAAMM,iBAIO,SAACC,GAC1B,MAAO,CACLC,UAAW,SAACZ,EAAMa,EAAUC,GAC1BH,EAASC,YAAUZ,EAAMa,EAAUC,KAErCC,cAAe,SAACf,EAAMa,EAAUC,GAC9BH,EAASI,YAAcf,EAAMa,EAAUC,KAEzCE,mBAAoB,SAAChB,EAAMa,EAAUC,GACnCH,EAASK,YAAmBhB,EAAMa,EAAUC,KAE9CG,sBAAuB,SAACJ,GACtBF,EAASM,YAAsBJ,QAKtBV,EAlMC,SAAC,GAQV,IAPLe,EAOI,EAPJA,SASQC,GAFJ,EANJd,UAMI,EALJI,SAKI,EAJJG,UAII,EAHJL,cAGI,EAFJS,mBAEI,EADJC,sBAEqBG,sBAAbP,SACaK,EAAbC,UACR,EAA0BE,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEACMC,IAAMC,IAC3B,mDACA,CACEC,QAAS,CACP,aAAcC,aAAaC,QAAQ,iBALxB,gBACTC,EADS,EACTA,KASFV,EAAQU,EAAKA,KACnBT,EAASD,GACTW,QAAQC,IAAIZ,GAZK,2CAAH,sDAqBhB,OANAa,qBAAU,WACJL,aAAaC,QAAQ,eACvBP,MAED,IAGD,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kDACA,0BACEY,KAAK,cACLC,QAAQ,iEAIZ,kBAAC,kBAAD,CAAiBC,GAA6B,KAA9C,QACA,kBAAC,kBAAD,CAAiBA,GAAIC,GAAyBpB,GAA9C,YAIA,kBAAC,IAAD,CAAWqB,UAAU,WAEnB,kBAAC,IAAD,MACA,yBAAK1C,UAAU,+BACb,yBAAKA,UAAU,aACZwB,GAASA,EAAMmB,QAAU,EACxB,kBAAC,WAAD,KACE,wBAAI3C,UAAU,mBAAd,oBACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qDACb,+BACE,+BACE,4BACE,wCACA,qCACA,4CACA,wCACA,sCAEA,4CACA,4CAGJ,sCACGwB,QADH,IACGA,OADH,EACGA,EAAOoB,KAAI,SAACC,EAAQC,GACnB,OACE,wBAAIA,IAAKA,GACP,wBAAI9C,UAAU,sBACZ,0BAAMA,UAAU,UAAhB,OACG6C,QADH,IACGA,OADH,EACGA,EAAQE,cAGb,wBAAI/C,UAAU,qBACZ,kBAAC,IAAD,CAAMwC,GAAG,KACP,yBACExC,UAAU,YACVgD,IACEP,GACAI,EAAOI,QAAQC,YAAY,GAE7BC,IAAI,OAKV,wBAAInD,UAAU,4BACZ,kBAAC,IAAD,CACEwC,GAEE,oBAIDK,EAAOI,QAAQG,cAElB,6BAVF,iBAWUP,QAXV,IAWUA,OAXV,EAWUA,EAAQQ,MAChB,6BAZF,gBAaSR,QAbT,IAaSA,OAbT,EAaSA,EAAQS,MAGjB,wBAAItD,UAAU,sBACZ,0BAAMA,UAAU,UAAhB,OACG6C,QADH,IACGA,OADH,EACGA,EAAQU,cAIb,wBAAIvD,UAAU,sBACZ,0BAAMA,UAAU,WADlB,OAEG6C,QAFH,IAEGA,OAFH,EAEGA,EAAQW,UAEX,wBAAIxD,UAAU,sBACZ,0BAAMA,UAAU,WADlB,OAEG6C,QAFH,IAEGA,OAFH,EAEGA,EAAQY,QAEX,wBAAIzD,UAAU,sBACZ,0BAAMA,UAAU,WACf0D,IAAM,OAACb,QAAD,IAACA,OAAD,EAACA,EAAQc,WAAWC,OAAO,iBAYtD,yBAAK5D,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,+BACb,uBAAGA,UAAU,gBAEf,yBAAKA,UAAU,yBAAf,oBACmB,6BAAO,IACxB,kBAAC,IAAD,CAAMwC,GAA6B,KAAnC","file":"static/js/57.164aacb1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDiscountPrice } from \"../../helpers/product\";\r\nimport {\r\n  addToWishlist,\r\n  deleteFromWishlist,\r\n  deleteAllFromWishlist,\r\n} from \"../../redux/actions/wishlistActions\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport Axios from \"axios\";\r\n//import Moment from \"react-moment\";\r\n//import \"moment-timezone\";\r\nimport moment from \"moment\";\r\n\r\nconst MyOrder = ({\r\n  location,\r\n  cartItems,\r\n  currency,\r\n  addToCart,\r\n  wishlistItems,\r\n  deleteFromWishlist,\r\n  deleteAllFromWishlist,\r\n}) => {\r\n  const { addToast } = useToasts();\r\n  const { pathname } = location;\r\n  const [order, setOrder] = useState([]);\r\n  const fetchOrder = async (token) => {\r\n    const { data } = await Axios.get(\r\n      \"http://35.154.86.59/api/admin/getorderbycustomer\",\r\n      {\r\n        headers: {\r\n          \"auth-token\": localStorage.getItem(\"auth-token\"),\r\n        },\r\n      }\r\n    );\r\n\r\n    const order = data.data;\r\n    setOrder(order);\r\n    console.log(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      fetchOrder();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Flone | MyOrder</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Wishlist page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        My Order\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n        <div className=\"cart-main-area pt-90 pb-100\">\r\n          <div className=\"container\">\r\n            {order && order.length >= 1 ? (\r\n              <Fragment>\r\n                <h3 className=\"cart-page-title\">Your Order Items</h3>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"table-content table-responsive cart-table-content\">\r\n                      <table>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ORDER ID</th>\r\n                            <th>Image</th>\r\n                            <th>Product Name</th>\r\n                            <th>QUANTITY</th>\r\n                            <th>AMOUNT</th>\r\n                            {/* <th>Unit Price</th> */}\r\n                            <th>Order Status</th>\r\n                            <th>Order Date</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {order?.map((orders, key) => {\r\n                            return (\r\n                              <tr key={key}>\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\">\r\n                                    {orders?.cus_orderId}\r\n                                  </span>\r\n                                </td>\r\n                                <td className=\"product-thumbnail\">\r\n                                  <Link to=\"#\">\r\n                                    <img\r\n                                      className=\"img-fluid\"\r\n                                      src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        orders.product.product_img[0]\r\n                                      }\r\n                                      alt=\"\"\r\n                                    />\r\n                                  </Link>\r\n                                </td>\r\n\r\n                                <td className=\"product-name text-center\">\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product-sticky/\"\r\n                                      // orders.prodct._id\r\n                                    }\r\n                                  >\r\n                                    {orders.product.product_name}\r\n                                  </Link>\r\n                                  <br />\r\n                                  COLOR: {orders?.color}\r\n                                  <br />\r\n                                  SIZE: {orders?.size}\r\n                                </td>\r\n\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\">\r\n                                    {orders?.product_qty}\r\n                                  </span>\r\n                                </td>\r\n\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\"></span>\r\n                                  {orders?.gsttotal}\r\n                                </td>\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\"></span>\r\n                                  {orders?.status}\r\n                                </td>\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\"></span>\r\n                                  {moment(orders?.createdAt).format(\"ll\")}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            ) : (\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"item-empty-area text-center\">\r\n                    <div className=\"item-empty-area__icon mb-30\">\r\n                      <i className=\"pe-7s-cart\"></i>\r\n                    </div>\r\n                    <div className=\"item-empty-area__text\">\r\n                      No Product Found <br />{\" \"}\r\n                      <Link to={process.env.PUBLIC_URL + \"/\"}>Shop Now</Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMyOrder.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  location: PropTypes.object,\r\n  deleteAllFromWishlist: PropTypes.func,\r\n  deleteFromWishlist: PropTypes.func,\r\n  wishlistItems: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    currency: state.currencyData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (item, addToast, quantityCount) => {\r\n      dispatch(addToCart(item, addToast, quantityCount));\r\n    },\r\n    addToWishlist: (item, addToast, quantityCount) => {\r\n      dispatch(addToWishlist(item, addToast, quantityCount));\r\n    },\r\n    deleteFromWishlist: (item, addToast, quantityCount) => {\r\n      dispatch(deleteFromWishlist(item, addToast, quantityCount));\r\n    },\r\n    deleteAllFromWishlist: (addToast) => {\r\n      dispatch(deleteAllFromWishlist(addToast));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyOrder);\r\n"],"sourceRoot":""}